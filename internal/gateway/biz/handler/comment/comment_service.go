// Code generated by hertz generator.

package comment

import (
	"context"
	"tuzi-tiktok/gateway/biz/err/access"
	"tuzi-tiktok/gateway/biz/err/global"
	"tuzi-tiktok/gateway/biz/service"
	kcomment "tuzi-tiktok/kitex/kitex_gen/comment"
	"tuzi-tiktok/utils/mapstruct"

	"github.com/cloudwego/hertz/pkg/app"
	"github.com/cloudwego/hertz/pkg/protocol/consts"
	comment "tuzi-tiktok/gateway/biz/model/comment"
)

// Comment .
// @router /douyin/comment/action/ [POST]
func Comment(ctx context.Context, c *app.RequestContext) {
	var (
		req     comment.CommentRequest
		handler = "Comment"
	)
	err := c.Bind(&req)
	if err != nil {
		_ = c.Error(global.RequestParameterBindError.WithHandler(handler).WithWarn(err))
		return
	}

	access.DebugRecordRequest(c, req)

	R, err := service.ServiceSet.Comment.Comment(ctx, &kcomment.CommentRequest{
		Token:       req.Token,
		VideoId:     req.VideoId,
		ActionType:  req.ActionType,
		CommentText: req.CommentText,
		CommentId:   req.CommentId,
	})

	if err != nil {
		_ = c.Error(global.RPCClientCallError.WithHandler(handler).WithError(err))
		return
	}

	resp := mapstruct.ToCommentResponse(R)

	c.JSON(consts.StatusOK, resp)
}

// GetCommentList .
// @router /douyin/comment/list/ [GET]
func GetCommentList(ctx context.Context, c *app.RequestContext) {
	var req comment.CommentListRequest
	var handler = "GetCommentList"
	err := c.Bind(&req)
	if err != nil {
		_ = c.Error(global.RequestParameterBindError.WithHandler(handler).WithWarn(err))
		return
	}

	access.DebugRecordRequest(c, req)

	R, err := service.ServiceSet.Comment.GetCommentList(ctx, &kcomment.CommentListRequest{
		Token:   req.Token,
		VideoId: req.VideoId,
	})

	if err != nil {
		_ = c.Error(global.RPCClientCallError.WithHandler(handler).WithError(err))
		return
	}

	resp := mapstruct.ToCommentListResponse(R)

	c.JSON(consts.StatusOK, resp)
}
