// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package utils

import (
	"tuzi-tiktok/kitex/kitex_gen/auth/authinfoservice"
	"tuzi-tiktok/kitex/kitex_gen/comment/commentservice"
	"tuzi-tiktok/kitex/kitex_gen/favorite/favoriteservice"
	"tuzi-tiktok/kitex/kitex_gen/feed/feedservice"
	"tuzi-tiktok/kitex/kitex_gen/message/messageservice"
	"tuzi-tiktok/kitex/kitex_gen/publish/publishservice"
	"tuzi-tiktok/kitex/kitex_gen/relation/relationservice"
)

// Injectors from clients.go:

func NewAuth() (authinfoservice.Client, error) {
	string2 := Auth()
	v := NoopExtra()
	v2 := NewClientOptions(v...)
	client, err := authinfoservice.NewClient(string2, v2...)
	if err != nil {
		return nil, err
	}
	return client, nil
}

func NewComment() (commentservice.Client, error) {
	string2 := Comment()
	v := NoopExtra()
	v2 := NewClientOptions(v...)
	client, err := commentservice.NewClient(string2, v2...)
	if err != nil {
		return nil, err
	}
	return client, nil
}

func NewFavorite() (favoriteservice.Client, error) {
	string2 := Favorite()
	v := NoopExtra()
	v2 := NewClientOptions(v...)
	client, err := favoriteservice.NewClient(string2, v2...)
	if err != nil {
		return nil, err
	}
	return client, nil
}

func NewFeed() (feedservice.Client, error) {
	string2 := Feed()
	v := NoopExtra()
	v2 := NewClientOptions(v...)
	client, err := feedservice.NewClient(string2, v2...)
	if err != nil {
		return nil, err
	}
	return client, nil
}

func NewMessage() (messageservice.Client, error) {
	string2 := Message()
	v := NoopExtra()
	v2 := NewClientOptions(v...)
	client, err := messageservice.NewClient(string2, v2...)
	if err != nil {
		return nil, err
	}
	return client, nil
}

func NewPublish() (publishservice.Client, error) {
	string2 := Publish()
	v := NoopExtra()
	v2 := NewClientOptions(v...)
	client, err := publishservice.NewClient(string2, v2...)
	if err != nil {
		return nil, err
	}
	return client, nil
}

func NewRelation() (relationservice.Client, error) {
	string2 := Relation()
	v := NoopExtra()
	v2 := NewClientOptions(v...)
	client, err := relationservice.NewClient(string2, v2...)
	if err != nil {
		return nil, err
	}
	return client, nil
}
